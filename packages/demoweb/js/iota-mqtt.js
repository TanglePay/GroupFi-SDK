!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@iota/iota.js"),require("@iota/util.js"),require("mqtt")):"function"==typeof define&&define.amd?define(["exports","@iota/iota.js","@iota/util.js","mqtt"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).IotaMqtt={},t.Iota,t.IotaUtil,t.mqtt)}(this,(function(t,e,s,i){"use strict";function n(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if("default"!==s){var i=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}var r=n(i);t.MqttClient=class{constructor(t,e=30){this._endpoints=Array.isArray(t)?t:[t],this._endpointsIndex=0,this._subscriptions={},this._statusSubscriptions={},this._lastMessageTime=-1,this._keepAliveTimeoutSeconds=e}milestonesLatest(t){return this.internalSubscribe("milestone-info/latest",!0,t)}milestonesConfirmed(t){return this.internalSubscribe("milestone-info/confirmed",!0,t)}blocksRaw(t){return this.internalSubscribe("blocks",!1,t)}blocks(t){return this.internalSubscribe("blocks",!1,((i,n)=>{t(i,e.deserializeBlock(new s.ReadStream(n)))}))}blocksReferenced(t){return this.internalSubscribe("block-metadata/referenced",!0,t)}blocksTransactionRaw(t){return this.internalSubscribe("blocks/transaction",!1,t)}blocksTransaction(t){return this.internalSubscribe("blocks/transaction",!1,((i,n)=>{t(i,e.deserializeBlock(new s.ReadStream(n)))}))}blocksTransactionTaggedDataRaw(t,e){let i="";return"string"==typeof t?i=`/${t}`:t instanceof Uint8Array&&(i=`/${s.Converter.bytesToHex(t)}`),this.internalSubscribe(`blocks/transaction/tagged-data${i}`,!1,e)}blocksTransactionTaggedData(t,i){let n="";return"string"==typeof t?n=`/${t}`:t instanceof Uint8Array&&(n=`/${s.Converter.bytesToHex(t)}`),this.internalSubscribe(`blocks/transaction/tagged-data${n}`,!1,((t,n)=>{i(t,e.deserializeBlock(new s.ReadStream(n)))}))}milestoneRaw(t){return this.internalSubscribe("milestones",!1,t)}milestone(t){return this.internalSubscribe("milestones",!1,((i,n)=>{t(i,e.deserializeMilestonePayload(new s.ReadStream(n)))}))}blocksTaggedRaw(t,e){let i="";return"string"==typeof t?i=`/${t}`:t instanceof Uint8Array&&(i=`/${s.Converter.bytesToHex(t)}`),this.internalSubscribe(`blocks/tagged-data${i}`,!1,e)}blocksTagged(t,i){let n="";return"string"==typeof t?n=`/${t}`:t instanceof Uint8Array&&(n=`/${s.Converter.bytesToHex(t)}`),this.internalSubscribe(`blocks/tagged-data${n}`,!1,((t,n)=>{i(t,e.deserializeBlock(new s.ReadStream(n)))}))}blocksMetadata(t,e){return this.internalSubscribe(`block-metadata/${t}`,!0,e)}transactionIncludedBlockRaw(t,e){return this.internalSubscribe(`transactions/${t}/included-block`,!1,e)}transactionIncludedBlock(t,i){return this.internalSubscribe(`transactions/${t}/included-block`,!1,((t,n)=>{i(t,e.deserializeBlock(new s.ReadStream(n)))}))}output(t,e){return this.internalSubscribe(`outputs/${t}`,!0,e)}nft(t,e){return this.internalSubscribe(`outputs/nft/${t}`,!0,e)}alias(t,e){return this.internalSubscribe(`outputs/alias/${t}`,!0,e)}foundry(t,e){return this.internalSubscribe(`outputs/foundry/${t}`,!0,e)}outputByConditionAndAddress(t,e,s){return this.internalSubscribe(`outputs/unlock/${t}/${e}`,!0,s)}outputSpentByConditionAndAddress(t,e,s){return this.internalSubscribe(`outputs/unlock/${t}/${e}/spent`,!0,s)}receipts(t){return this.internalSubscribe("receipts",!0,t)}subscribeRaw(t,e){return this.internalSubscribe(t,!1,e)}subscribeJson(t,e){return this.internalSubscribe(t,!0,e)}unsubscribe(t){if(this.triggerStatusCallbacks({type:"subscription-remove",message:t,state:this.calculateState()}),this._statusSubscriptions[t])delete this._statusSubscriptions[t];else{const e=Object.keys(this._subscriptions);for(let s=0;s<e.length;s++){const i=e[s];for(let e=0;e<this._subscriptions[i].subscriptionCallbacks.length;e++)if(this._subscriptions[i].subscriptionCallbacks[e].subscriptionId===t)return this._subscriptions[i].subscriptionCallbacks.splice(e,1),void(0===this._subscriptions[i].subscriptionCallbacks.length&&(delete this._subscriptions[i],this.mqttUnsubscribe(i)))}}}statusChanged(t){const e=s.Converter.bytesToHex(s.RandomHelper.generate(32));return this._statusSubscriptions[e]=t,e}internalSubscribe(t,e,i){let n=!1;this._subscriptions[t]||(this._subscriptions[t]={isJson:e,subscriptionCallbacks:[]},n=!0);const r=s.Converter.bytesToHex(s.RandomHelper.generate(32));return this._subscriptions[t].subscriptionCallbacks.push({subscriptionId:r,callback:i}),this.triggerStatusCallbacks({type:"subscription-add",message:r,state:this.calculateState()}),n&&this.mqttSubscribe(t),r}mqttSubscribe(t){if(this._client)try{this._client.subscribe(t)}catch(e){this.triggerStatusCallbacks({type:"error",message:`Subscribe to topic ${t} failed on ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState(),error:e})}else this.mqttConnect()}mqttUnsubscribe(t){if(this._client)try{this._client.unsubscribe(t)}catch(e){this.triggerStatusCallbacks({type:"error",message:`Unsubscribe from topic ${t} failed on ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState(),error:e})}}mqttConnect(){if(!this._client)try{this._client=r.connect(this._endpoints[this._endpointsIndex],{keepalive:0,reconnectPeriod:1e3*this._keepAliveTimeoutSeconds}),this._client.on("connect",(()=>{try{this._client&&(this._client.subscribe(Object.keys(this._subscriptions)),this.startKeepAlive(),this.triggerStatusCallbacks({type:"connect",message:`Connection complete ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState()}))}catch(t){this.triggerStatusCallbacks({type:"error",message:`Subscribe to topics failed on ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState(),error:t})}})),this._client.on("message",((t,e)=>{this._lastMessageTime=Date.now(),this.triggerCallbacks(t,e)})),this._client.on("error",(t=>{this.triggerStatusCallbacks({type:"error",message:`Error on ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState(),error:t}),this.nextClient()}))}catch(t){this.triggerStatusCallbacks({type:"connect",message:`Connection failed to ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState(),error:t}),this.nextClient()}}mqttDisconnect(){if(this.stopKeepAlive(),this._client){const t=this._client;this._client=void 0;try{t.unsubscribe(Object.keys(this._subscriptions)),t.end()}catch{}this.triggerStatusCallbacks({type:"disconnect",message:`Disconnect complete ${this._endpoints[this._endpointsIndex]}`,state:this.calculateState()})}}triggerCallbacks(t,e){if(this._subscriptions[t]){let s=e;if(this._subscriptions[t].isJson)try{s=JSON.parse(e.toString())}catch(e){this.triggerStatusCallbacks({type:"error",message:`Error decoding JSON for topic ${t}`,state:this.calculateState(),error:e})}for(let e=0;e<this._subscriptions[t].subscriptionCallbacks.length;e++)try{this._subscriptions[t].subscriptionCallbacks[e].callback(t,s)}catch(s){this.triggerStatusCallbacks({type:"error",message:`Triggering callback failed for topic ${t} on subscription ${this._subscriptions[t].subscriptionCallbacks[e].subscriptionId}`,state:this.calculateState(),error:s})}}}triggerStatusCallbacks(t){const e=Object.keys(this._statusSubscriptions);for(let s=0;s<e.length;s++)this._statusSubscriptions[e[s]](t)}startKeepAlive(){this.stopKeepAlive(),this._lastMessageTime=Date.now(),this._timerId=setInterval((()=>this.keepAlive()),this._keepAliveTimeoutSeconds/2*1e3)}stopKeepAlive(){void 0!==this._timerId&&(clearInterval(this._timerId),this._timerId=void 0)}keepAlive(){Date.now()-this._lastMessageTime>1e3*this._keepAliveTimeoutSeconds&&(this.mqttDisconnect(),this.nextClient(),this.mqttConnect())}calculateState(){let t="disconnected";return this._client&&(this._client.connected?t="connected":this._client.disconnecting?t="disconnecting":this._client.reconnecting&&(t="connecting")),t}nextClient(){this._endpointsIndex++,this._endpointsIndex>=this._endpoints.length&&(this._endpointsIndex=0)}},Object.defineProperty(t,"__esModule",{value:!0})}));